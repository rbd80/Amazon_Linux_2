---
###########################################################################
# INSTALLATION                                                            #
###########################################################################
- name: "Install packages for OSSEC agent"
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - gcc
    - httpd
    - telnet
  become: true

- name: "Ensure OSSEC src directory exists."
  file:
    path: "{{ extract_path }}/ossec-hids-{{ ossec_version }}"
    state: directory
  become: yes

- name: "Download OSSEC-HIDS"
  get_url:
    url: "{{ ossec_url }}"
    dest: "{{ extract_path }}/ossec-hids-{{ ossec_version }}.tar.gz"
  become: yes

- name: "Download OSSEC-HIDS ASC."
  get_url:
    url: "{{ ossec_urlasc }}"
    dest: "{{ extract_path }}/ossec-hids-{{ ossec_version }}.tar.gz.asc"

- name: "Download OSSEC-HIDS archive key."
  get_url:
    url: "https://ossec.github.io/files/OSSEC-ARCHIVE-KEY.asc"
    dest: "{{ extract_path }}/OSSEC-ARCHIVE-KEY.asc"

- name: "Import the OSSEC Archive Key"
  shell: gpg --import {{ extract_path }}/OSSEC-ARCHIVE-KEY.asc

# TODO Fix the checksum
#- name: "Verify OSSEC ASC"
#  shell: gpg --verify {{ extract_path }}/ossec-hids-{{ ossec_version }}.tar.gz.asc {{ extract_path }}/{{ ossec_version }}.tar.gz

- name:  "Extract OSSEC "
  unarchive:
    src: "{{ extract_path }}/{{ ossec_version }}.tar.gz"
    dest: "{{ extract_path }}"

#tar xfz ossec-hids-${ossec_version}.tar.gz
#cd ossec-hids-${ossec_version}
#cp /home/admin/ossec_preloaded-vars.conf ./etc/preloaded-vars.conf
#cat ./etc/preloaded-vars.conf#
#sudo bash ./install.sh
#sudo /var/ossec/bin/ossec-control start


- name: "OSSEC add the preloaded config file"
  template:
    src: /templates/preloadaed-vars.conf.j2
    dest: ./etc/preloaded-vars.conf


# Build / Install the agent
- name: ossec - build/install the agent
  command: ./install.sh chdir={{ ossec.tmp_dir }}/{{ ossec.untar_dir }}
  when: (installed.changed is defined and installed.changed) or
        (tarball.changed is defined and tarball.changed)
  tags: ossec

###########################################################################
# CONFIGURATION                                                           #
###########################################################################

# Configure the agent ossec.conf (override per-host if needed)
- name: ossec - configure the agent (ossec.conf)
  template: dest={{ ossec.install_dir }}/etc/ossec.conf
            owner=root
            group=ossec
            mode=0440
            backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_ossec.conf.j2"
    - ossec.conf.j2
  notify:
    - ossec - restart agent
  tags: ossec

# Configure the agent internal_options.conf (override per-host if
# needed)
- name: ossec - configure the agent (internal_options.conf)
  template: dest={{ ossec.install_dir }}/etc/internal_options.conf
            owner=root
            group=ossec
            mode=0440
            backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_internal_options.conf.j2"
    - internal_options.conf.j2
  notify:
    - ossec - restart agent
  tags: ossec

# Patch the init.d script since it has a broken status setup
- name: ossec - configure the agent (init.d script)
  template: dest=/etc/init.d/ossec
            owner=root
            group=ossec
            mode=0755
  first_available_file:
    - "{{ ansible_hostname }}_ossec-init-script.j2"
    - ossec-init-script.j2
  tags: ossec

# Setup the client.keys file for the agent (NOTE: this requires the md5
# jinja filter to be available
- name: ossec - configure the agent key
  template: dest={{ ossec.install_dir }}/etc/client.keys
            owner=ossec
            group=ossec
            mode=0644
            backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_client.keys.j2"
    - client.keys.j2
  register: client_key
  notify:
    - ossec - restart agent
  tags: ossec

# Ensure the services are started
- name: ossec - start ossec
  service: name=ossec state=started pattern=ossec
  tags: ossec

###########################################################################
# CLEANUP                                                                 #
###########################################################################

# Remove compiler components only if we added them initially
- name: ossec - remove compiler components (if necessary)
  apt: pkg=build-essential state=absent purge=yes
  when: compiler.changed
  tags: ossec

# Autoremove additional packages added if we added them initially
- name: ossec - autoremove additional components (if necessary)
  command: /usr/bin/apt-get -y --purge autoremove
  when: compiler.changed
  tags: ossec